name: CMake Build

on: 
  # push代码时触发workflow
  push:
    paths-ignore: # 下列文件的变更不触发部署，可以自行添加
        - 'doc/**'
        - '.clang*'
        - '.gitignore'
        - 'LICENSE'
        - 'README*'
  pull_request:
    paths-ignore: # 下列文件的变更不触发部署，可以自行添加
        - 'doc/**'
        - '.clang*'
        - '.gitignore'
        - 'LICENSE'
        - 'README*'

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
        qt_ver: 
          - 6.6.0
        build_type:
          - "RelWithDebInfo"
        generators:
          - "Ninja"

    steps:
      - name: cache vcpkg
        uses: actions/cache@v3
        with:
          path: |
            C:\vcpkg\installed
            /usr/local/share/vcpkg/installed
          key: ${{ runner.os }}-vcpkg-installed-${{ matrix.os }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-installed-${{ matrix.os }}-
            ${{ runner.os }}-vcpkg-installed-
      - name: Install dependencies on windows
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          choco install ninja
          ninja --version
          cmake --version
          vcpkg install breakpad ffmpeg[opengl,ass,bzip2,freetype,fribidi,zlib] --triplet x64-windows
      - name: Install dependencies on macos
        if: startsWith(matrix.os, 'macos')
        shell: bash
        run: |
          brew install ninja nasm pkg-config
          ninja --version
          cmake --version
          clang --version
          vcpkg install breakpad ffmpeg[opengl,ass,bzip2,freetype,fribidi,zlib] --triplet x64-osx
      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build nasm build-essential libgl1-mesa-dev
          ninja --version
          cmake --version
          gcc --version
          vcpkg install breakpad ffmpeg[opengl,ass,bzip2,freetype,fribidi,zlib] --triplet x64-linux

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt_ver }}
          install-deps: 'true'
          modules: 'qt5compat addons.qtnetworkauth addons.qtmultimedia addons.qtimageformats'
          cache: 'true'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Enable Developer Command Prompt
        if: startsWith(matrix.os, 'windows')
        uses: ilammy/msvc-dev-cmd@v1.12.1
        with:
          arch: amd64
      - name: Configure windows
        if: startsWith(matrix.os, 'windows')
        shell: bash
        run: |
          cmake \
            -S . \
            -B ./build \
            -DCMAKE_C_COMPILER=cl \
            -DCMAKE_CXX_COMPILER=cl \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -G "${{ matrix.generators }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir
      - name: Configure macos or ubuntu
        if: startsWith(matrix.os, 'macos') || startsWith(matrix.os, 'ubuntu')
        shell: bash
        run: |
          cmake \
            -S . \
            -B ./build \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -G "${{ matrix.generators }}" \
            -DCMAKE_INSTALL_PREFIX:PATH=instdir
      - name: Build
        shell: bash
        run: |
          cmake --build ./build --config ${{ matrix.build_type }}
          